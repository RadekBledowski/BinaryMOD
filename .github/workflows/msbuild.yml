name: Build and Release Application

on:
  workflow_dispatch:
  push:
    #    branches:
    #      - master
    tags:
      - 'v*' # Trigger only on tags like v1.0.0, v2.0.1, etc.

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Initialize Submodules
        run: git submodule update --init --recursive

      - name: Debug Directory Structure
        run: tree /f /a

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Build Submodules
        run: |
          dotnet build Modules\ILWrapper\ILWrapper\ILWrapper.csproj -c Release --framework net7.0
          dotnet build Modules\CoreExtensions\CoreExtensions\CoreExtensions.csproj -c Release --framework net7.0
          dotnet build Modules\Nikki\Nikki\Nikki.csproj -c Release --framework net7.0
          dotnet build Modules\Endscript\Endscript\Endscript.csproj -c Release --framework net7.0

      - name: Publish Binary
        run: dotnet publish Binary\Binary.csproj -c Release --framework net7.0-windows

      - name: Create ZIP Archive
        run: |
          mkdir artifact
          tag_version=${{ github.ref_name }}
          powershell Compress-Archive -Path Binary/bin/Release/net7.0-windows/* -DestinationPath artifact/${tag_version}.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} # Use the tag that triggered the workflow
          release_name: Binary ${{ github.ref_name }} # Release name includes version
          draft: false
          prerelease: false

      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifact/${{ github.ref_name }}.zip # Use versioned asset name
          asset_name: ${{ github.ref_name }}.zip
          asset_content_type: application/zip
